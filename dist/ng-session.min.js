!function(n){"use strict";function s(n,s){function e(s){return n.session.user=s.data,s}function u(){return c().then(e)}function t(s){return n.session.user=null,s}function r(e,t){return n.session.user=null,s.post(i.signInUrl,e,t).then(u)}function o(n,e){return s.post(i.signOutUrl,n,e).then(t)}function c(n){return s.get(i.updateUrl,n).then(e)}function g(s){return s&&n.session.user?n.session.user[s]:n.session.user}function l(s){return n.session[s]}function f(s,e){n.session[s]=e}function a(s){delete n.session[s]}n.session={};var p={signOut:o,signIn:r,update:c,user:g,get:l,set:f,del:a};return p}function e(n){n.update()}function u(n){r.isString(n.url)&&(i.url=n.url)}function t(){return o}var r=n.angular,i={signOutUrl:"/api/users/sign-out",signInUrl:"/api/users/sign-in",updateUrl:"/api/session"},o={configure:u,$get:["$rootScope","$http",s]};r.module("ngSession",[]).provider("ngSession",t).run(["ngSession",e])}(window);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5nLXNlc3Npb24uanMiXSwibmFtZXMiOlsid2luZG93IiwibmdTZXNzaW9uU2VydmljZUZuIiwiJHJvb3RTY29wZSIsIiRodHRwIiwib25TZXNzaW9uVXBkYXRlU3VjY2VzcyIsInJlcyIsInNlc3Npb24iLCJ1c2VyIiwiZGF0YSIsIm9uU2luZ0luU3VjY2VzcyIsInVwZGF0ZSIsInRoZW4iLCJvblNpbmdPdXRTdWNjZXNzIiwic2lnbkluIiwib3B0aW9ucyIsInBvc3QiLCJjb25maWciLCJzaWduSW5VcmwiLCJzaWduT3V0Iiwic2lnbk91dFVybCIsImdldCIsInVwZGF0ZVVybCIsInByb3AiLCJzZXQiLCJ2YWx1ZSIsImRlbCIsIm5nU2Vzc2lvblNlcnZpY2VEZWYiLCJuZ1Nlc3Npb25SdW5GbiIsIiRzZXNzaW9uIiwiY29uZmlndXJlIiwiY2ZnIiwibmciLCJpc1N0cmluZyIsInVybCIsIm5nU2Vzc2lvblByb3ZpZGVyRm4iLCJuZ1Nlc3Npb25Qcm92aWRlckRlZiIsImFuZ3VsYXIiLCIkZ2V0IiwibW9kdWxlIiwicHJvdmlkZXIiLCJydW4iXSwibWFwcGluZ3MiOiJDQUFDLFNBQVVBLEdBQ1QsWUFjQSxTQUFTQyxHQUFtQkMsRUFBWUMsR0FNdEMsUUFBU0MsR0FBdUJDLEdBRTlCLE1BREFILEdBQVdJLFFBQVFDLEtBQU9GLEVBQUlHLEtBQ3ZCSCxFQU1ULFFBQVNJLEtBQ1AsTUFBT0MsS0FBU0MsS0FBS1AsR0FNdkIsUUFBU1EsR0FBaUJQLEdBRXhCLE1BREFILEdBQVdJLFFBQVFDLEtBQU8sS0FDbkJGLEVBZVQsUUFBU1EsR0FBT0wsRUFBTU0sR0FJcEIsTUFGQVosR0FBV0ksUUFBUUMsS0FBTyxLQUVuQkosRUFBTVksS0FBS0MsRUFBT0MsVUFBV1QsRUFBTU0sR0FDdkNILEtBQUtGLEdBZVYsUUFBU1MsR0FBUVYsRUFBTU0sR0FDckIsTUFBT1gsR0FBTVksS0FBS0MsRUFBT0csV0FBWVgsRUFBTU0sR0FDeENILEtBQUtDLEdBY1YsUUFBU0YsR0FBT0ksR0FFZCxNQUFPWCxHQUFNaUIsSUFBSUosRUFBT0ssVUFBV1AsR0FDaENILEtBQUtQLEdBV1YsUUFBU0csR0FBS2UsR0FDWixNQUFJQSxJQUFRcEIsRUFBV0ksUUFBUUMsS0FDdEJMLEVBQVdJLFFBQVFDLEtBQUtlLEdBRzFCcEIsRUFBV0ksUUFBUUMsS0FVNUIsUUFBU2EsR0FBSUUsR0FDWCxNQUFPcEIsR0FBV0ksUUFBUWdCLEdBUzVCLFFBQVNDLEdBQUlELEVBQU1FLEdBQ2pCdEIsRUFBV0ksUUFBUWdCLEdBQVFFLEVBUTdCLFFBQVNDLEdBQUlILFNBQ0pwQixHQUFXSSxRQUFRZ0IsR0ExSDVCcEIsRUFBV0ksVUE4SFgsSUFBSW9CLElBQ0ZSLFFBQVNBLEVBQ1RMLE9BQVFBLEVBQ1JILE9BQVFBLEVBQ1JILEtBQU1BLEVBQ05hLElBQUtBLEVBQ0xHLElBQUtBLEVBQ0xFLElBQUtBLEVBR1AsT0FBT0MsR0FNVCxRQUFTQyxHQUFlQyxHQUN0QkEsRUFBU2xCLFNBUVgsUUFBU21CLEdBQVVDLEdBRWJDLEVBQUdDLFNBQVNGLEVBQUlHLE9BQ2xCakIsRUFBT2lCLElBQU1ILEVBQUlHLEtBb0JyQixRQUFTQyxLQUNQLE1BQU9DLEdBNUxULEdBQUlKLEdBQUsvQixFQUFPb0MsUUFHWnBCLEdBQ0ZHLFdBQVksc0JBQ1pGLFVBQVcscUJBQ1hJLFVBQVcsZ0JBd0tUYyxHQUNGTixVQUFXQSxFQUVYUSxNQUNFLGFBQWMsUUFFZHBDLEdBWUo4QixHQUFHTyxPQUFPLGdCQUdUQyxTQUFTLFlBQWFMLEdBR3RCTSxLQUNDLFlBRUFiLEtBR0YzQiIsImZpbGUiOiJuZy1zZXNzaW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICh3aW5kb3cpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIHZhciBuZyA9IHdpbmRvdy5hbmd1bGFyO1xuXG4gIC8qIERlZmF1bHQgY29uZmlndXJhdGlvbiAqL1xuICB2YXIgY29uZmlnID0ge1xuICAgIHNpZ25PdXRVcmw6ICcvYXBpL3VzZXJzL3NpZ24tb3V0JyxcbiAgICBzaWduSW5Vcmw6ICcvYXBpL3VzZXJzL3NpZ24taW4nLFxuICAgIHVwZGF0ZVVybDogJy9hcGkvc2Vzc2lvbidcbiAgfTtcblxuICAvKipcbiAgICogbmdTZXNzaW9uIHNlcnZpY2UgZnVuY3Rpb24uXG4gICAqL1xuICBmdW5jdGlvbiBuZ1Nlc3Npb25TZXJ2aWNlRm4oJHJvb3RTY29wZSwgJGh0dHApIHtcbiAgICAkcm9vdFNjb3BlLnNlc3Npb24gPSB7fTtcblxuICAgIC8qKlxuICAgICAqIFNlc3Npb24gdXBkYXRlIHN1Y2Nlc3NmdWwuXG4gICAgICovXG4gICAgZnVuY3Rpb24gb25TZXNzaW9uVXBkYXRlU3VjY2VzcyhyZXMpIHtcbiAgICAgICRyb290U2NvcGUuc2Vzc2lvbi51c2VyID0gcmVzLmRhdGE7XG4gICAgICByZXR1cm4gcmVzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE9uIFNpZ24gSW4gc3VjY2Vzcy5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBvblNpbmdJblN1Y2Nlc3MoKSB7XG4gICAgICByZXR1cm4gdXBkYXRlKCkudGhlbihvblNlc3Npb25VcGRhdGVTdWNjZXNzKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBPbiBTaWduIE91dCBzdWNjZXNzLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIG9uU2luZ091dFN1Y2Nlc3MocmVzKSB7XG4gICAgICAkcm9vdFNjb3BlLnNlc3Npb24udXNlciA9IG51bGw7XG4gICAgICByZXR1cm4gcmVzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNpZ25zIGEgdXNlciBpbi5cbiAgICAgKlxuICAgICAqIEl0IHdpbGwgcGVyZm9ybSBhIFBPU1QgdG8gdGhlIGBjb25maWcuc2lnbk91dFVybGAgcGF0aCBhbmQgYXNzaWduIHRoZVxuICAgICAqIHVzZXIgb2JqZWN0IGZyb20gdGhlIGByZXMuZGF0YWAgb2JqZWN0IG9uIHN1Y2Nlc3MuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YSBUaGUgZGF0YSB0byBzZW5kIGZvciBzaWduIGluLlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIE9wdGlvbmFsIEFuZ3VsYXJKUyBIVFRQIHJlcXVlc3Qgb3B0aW9ucy5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSByZXEgVGhlIEFuZ3VsYXJKUyBIVFRQIHByb21pc2UuIFdpbGwgcGFzcyBhbG9uZyB0aGVcbiAgICAgKiByZXF1ZXN0J3MgYHJlc2Agb2JqZWN0LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHNpZ25JbihkYXRhLCBvcHRpb25zKSB7XG4gICAgICAvKiBSZW1vdmUgcHJldmlvdXMgdXNlciBvYmplY3QgKi9cbiAgICAgICRyb290U2NvcGUuc2Vzc2lvbi51c2VyID0gbnVsbDtcblxuICAgICAgcmV0dXJuICRodHRwLnBvc3QoY29uZmlnLnNpZ25JblVybCwgZGF0YSwgb3B0aW9ucylcbiAgICAgICAgLnRoZW4ob25TaW5nSW5TdWNjZXNzKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaWducyBhIHVzZXIgb3V0LlxuICAgICAqXG4gICAgICogSXQgd2lsbCBwZXJmb3JtIGEgUE9TVCB0byB0aGUgYGNvbmZpZy5zaWduT3V0VXJsYCBwYXRoIGFuZCBkZWxldGUgdGhlXG4gICAgICogdXNlciBvYmplY3Qgb24gc3VjY2Vzcy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIFRoZSBvcHRpb25hbCBkYXRhIHRvIHNlbmQgZm9yIHNpZ24gb3V0LlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIE9wdGlvbmFsIEFuZ3VsYXJKUyBIVFRQIHJlcXVlc3Qgb3B0aW9ucy5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSByZXEgVGhlIEFuZ3VsYXJKUyBIVFRQIHByb21pc2UuIFdpbGwgcGFzcyBhbG9uZyB0aGVcbiAgICAgKiByZXF1ZXN0J3MgYHJlc2Agb2JqZWN0LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHNpZ25PdXQoZGF0YSwgb3B0aW9ucykge1xuICAgICAgcmV0dXJuICRodHRwLnBvc3QoY29uZmlnLnNpZ25PdXRVcmwsIGRhdGEsIG9wdGlvbnMpXG4gICAgICAgIC50aGVuKG9uU2luZ091dFN1Y2Nlc3MpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZXMgdGhlIHNlc3Npb24gdXNlciBvYmplY3QuXG4gICAgICpcbiAgICAgKiBJdCB3aWxsIHBlcmZvcm0gYSBHRVQgdG8gdGhlIGBjb25maWcudXBkYXRlVXJsYCBwYXRoIGFuZCBzZXQgdGhlXG4gICAgICogc2Vzc2lvbidzIHVzZXIgb2JqZWN0IG9uIHN1Y2Nlc3Mgd2l0aCB0aGUgcmVxdWVzdCdzIGByZXMuZGF0YWAuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyBPcHRpb25hbCBBbmd1bGFySlMgSFRUUCByZXF1ZXN0IG9wdGlvbnMuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gcmVxIFRoZSBBbmd1bGFySlMgSFRUUCBwcm9taXNlLiBXaWxsIHBhc3MgYWxvbmcgdGhlXG4gICAgICogcmVxdWVzdCdzIGByZXNgIG9iamVjdC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiB1cGRhdGUob3B0aW9ucykge1xuICAgICAgLyogUmV0cmlldmUgY3VycmVudCBzZXNzaW9uICovXG4gICAgICByZXR1cm4gJGh0dHAuZ2V0KGNvbmZpZy51cGRhdGVVcmwsIG9wdGlvbnMpXG4gICAgICAgIC50aGVuKG9uU2Vzc2lvblVwZGF0ZVN1Y2Nlc3MpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyBhIHVzZXIgZGF0YSB2YWx1ZSBieSBwcm9wZXJ0eSBuYW1lLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHByb3AgVGhlIHByb3BlcnR5IG5hbWUgdG8gcmV0cmlldmUuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7TWl4ZWR9IHZhbHVlIFRoZSBwcm9wZXJ0eSdzIHZhbHVlIG9yIHRoZSB1c2VyIG9iamVjdCBpZiBub1xuICAgICAqIHByb3BlcnR5IG5hbWUgaXMgcHJvdmlkZWQuXG4gICAgICovXG4gICAgZnVuY3Rpb24gdXNlcihwcm9wKSB7XG4gICAgICBpZiAocHJvcCAmJiAkcm9vdFNjb3BlLnNlc3Npb24udXNlcikge1xuICAgICAgICByZXR1cm4gJHJvb3RTY29wZS5zZXNzaW9uLnVzZXJbcHJvcF07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAkcm9vdFNjb3BlLnNlc3Npb24udXNlcjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBPYnRhaW5zIGEgdmFsdWUgZnJvbSB0aGUgc2Vzc2lvbiBvYmplY3QuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gcHJvcCBUaGUgcHJvcGVydHkgbmFtZSB0byBvYnRhaW4uXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7TWl4ZWR9IHZhbHVlIFRoZSBwcm9wZXJ0eSdzIHZhbHVlLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGdldChwcm9wKSB7XG4gICAgICByZXR1cm4gJHJvb3RTY29wZS5zZXNzaW9uW3Byb3BdO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldHMgYSB2YWx1ZSBpbiB0aGUgc2Vzc2lvbiBvYmplY3QuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gcHJvcCBUaGUgcHJvcGVydHkgbmFtZSB0byBzZXQuXG4gICAgICogQHBhcmFtIHtNaXhlZH0gdmFsdWUgVGhlIHByb3BlcnR5IHZhbHVlIHRvIHNldC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBzZXQocHJvcCwgdmFsdWUpIHtcbiAgICAgICRyb290U2NvcGUuc2Vzc2lvbltwcm9wXSA9IHZhbHVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERlbGV0ZXMgYSBwcm9wZXJ0eSBmcm9tIHRoZSBzZXNzaW9uIG9iamVjdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wIFRoZSBwcm9wZXJ0eSBuYW1lLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRlbChwcm9wKSB7XG4gICAgICBkZWxldGUgJHJvb3RTY29wZS5zZXNzaW9uW3Byb3BdO1xuICAgIH1cblxuICAgIC8qIFNlc3Npb24gc2VydmljZSBkZWZpbml0aW9uICovXG4gICAgdmFyIG5nU2Vzc2lvblNlcnZpY2VEZWYgPSB7XG4gICAgICBzaWduT3V0OiBzaWduT3V0LFxuICAgICAgc2lnbkluOiBzaWduSW4sXG4gICAgICB1cGRhdGU6IHVwZGF0ZSxcbiAgICAgIHVzZXI6IHVzZXIsXG4gICAgICBnZXQ6IGdldCxcbiAgICAgIHNldDogc2V0LFxuICAgICAgZGVsOiBkZWxcbiAgICB9O1xuXG4gICAgcmV0dXJuIG5nU2Vzc2lvblNlcnZpY2VEZWY7XG4gIH1cblxuICAvKipcbiAgICogbmdTZXNzaW9uIHJ1biBmdW5jdGlvbi5cbiAgICovXG4gIGZ1bmN0aW9uIG5nU2Vzc2lvblJ1bkZuKCRzZXNzaW9uKSB7XG4gICAgJHNlc3Npb24udXBkYXRlKCk7XG4gIH1cblxuICAvKipcbiAgICogQ29uZmlndXJhdGlvbiBtZXRob2QuXG4gICAqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZ3VyYXRpb24gb2JqZWN0LlxuICAgKi9cbiAgZnVuY3Rpb24gY29uZmlndXJlKGNmZykge1xuICAgIC8qIFNldHMgZGVmYXVsdCBzZXNzaW9uIEdFVCBVUkwgKi9cbiAgICBpZiAobmcuaXNTdHJpbmcoY2ZnLnVybCkpIHtcbiAgICAgIGNvbmZpZy51cmwgPSBjZmcudXJsO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBuZ1Nlc3Npb24gcHJvdmlkZXIgZGVmaW5pdGlvbi5cbiAgICovXG4gIHZhciBuZ1Nlc3Npb25Qcm92aWRlckRlZiA9IHtcbiAgICBjb25maWd1cmU6IGNvbmZpZ3VyZSxcblxuICAgICRnZXQ6IFtcbiAgICAgICckcm9vdFNjb3BlJywgJyRodHRwJyxcblxuICAgICAgbmdTZXNzaW9uU2VydmljZUZuXG4gICAgXVxuICB9O1xuXG4gIC8qKlxuICAgKiBuZ1Nlc3Npb24gcHJvdmlkZXIgZnVuY3Rpb24uXG4gICAqL1xuICBmdW5jdGlvbiBuZ1Nlc3Npb25Qcm92aWRlckZuKCkge1xuICAgIHJldHVybiBuZ1Nlc3Npb25Qcm92aWRlckRlZjtcbiAgfVxuXG4gIC8qIERlZmluZSBBbmd1bGFySlMgbW9kdWxlICovXG4gIG5nLm1vZHVsZSgnbmdTZXNzaW9uJywgW10pXG5cbiAgLyogRGVmaW5lIHNlcnZpY2UgcHJvdmlkZXIgKi9cbiAgLnByb3ZpZGVyKCduZ1Nlc3Npb24nLCBuZ1Nlc3Npb25Qcm92aWRlckZuKVxuXG4gIC8qIERlZmluZSBBbmd1bGFySlMgbW9kdWxlIHJ1biBmdW5jdGlvbiAqL1xuICAucnVuKFtcbiAgICAnbmdTZXNzaW9uJyxcblxuICAgIG5nU2Vzc2lvblJ1bkZuXG4gIF0pO1xuXG59KHdpbmRvdykpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
